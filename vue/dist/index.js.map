{"version":3,"file":"index.js","sources":["../node_modules/tslib/tslib.es6.js","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { onUnmounted, customRef, computed, defineComponent, Component } from 'vue';\n\n// const logger = console\nconst logger =  __DEV__ && __LOGGING__ ? console : {\n    log(...args: any[]) {\n        \n    },\n    warn(...args: any[]) {\n        \n    },\n    error(...args: any[]) {\n        logger.log(...args)\n    }\n}\n\n///\n/// EXPOTED SYMBOLS (LIBRARY INTERFACE)\n///\n\n/**\n * 'JSON path' from root of a state object to a nested property.\n * Return type of [StateMethod.path](#readonly-path).\n *\n * For example, an object `{ a: [{ b: 1 }, { 1000: 'value' }, '3rd'] }`,\n * has got the following paths pointing to existing properties:\n *\n * - `[]`\n * - `['a']`\n * - `['a', 0]`\n * - `['a', 0, 'b']`\n * - `['a', 1]`\n * - `['a', 1, 1000]`\n * - `['a', 2]`\n */\nexport type Path = ReadonlyArray<string | number>;\n\n/**\n * Type of an argument of [StateMethods.set](#set).\n * \n * @typeparam S Type of a value of a state\n */\nexport type SetStateAction<S> = (S | Promise<S>) | ((prevState: S) => (S | Promise<S>));\n\n/**\n * Type of an argument of [StateMethods.merge](#merge).\n * \n * @typeparam S Type of a value of a state\n */\nexport type SetPartialStateAction<S> =\n    S extends ReadonlyArray<(infer U)> ?\n        ReadonlyArray<U> | Record<number, U> | ((prevValue: S) => (ReadonlyArray<U> | Record<number, U>)) :\n    S extends object | string ? Partial<S> | ((prevValue: S) => Partial<S>) :\n    S | ((prevState: S) => S);\n\n/**\n * Type of an argument of [createState](#createstate) and [useState](#usestate).\n * \n * @typeparam S Type of a value of a state\n */\nexport type SetInitialStateAction<S> = S | Promise<S> | (() => S | Promise<S>)\n\n/**\n * Special symbol which is used as a property to switch\n * between [StateMethods](#interfacesstatemethodsmd) and the corresponding [State](#state).\n * \n * [Learn more...](https://vue3.dev/docs/nested-state)\n */\nexport const self = Symbol('self')\n\n/**\n * Special symbol which might be returned by onPromised callback of [StateMethods.map](#map) function.\n * \n * [Learn more...](https://vue3.dev/docs/asynchronous-state#executing-an-action-when-state-is-loaded)\n */\nexport const postpone = Symbol('postpone')\n\n/**\n * Special symbol which might be used to delete properties\n * from an object calling [StateMethods.set](#set) or [StateMethods.merge](#merge).\n * \n * [Learn more...](https://vue3.dev/docs/nested-state#deleting-existing-element)\n */\nexport const none = Symbol('none') as StateValueAtPath;\n\n/**\n * Return type of [StateMethods.keys](#readonly-keys).\n * \n * @typeparam S Type of a value of a state\n */\nexport type InferredStateKeysType<S> =\n    S extends ReadonlyArray<infer _> ? ReadonlyArray<number> :\n    S extends null ? undefined :\n    S extends object ? ReadonlyArray<keyof S> :\n    undefined;\n\n/**\n * Return type of [StateMethods.map()](#map).\n * \n * @typeparam S Type of a value of a state\n */\nexport type InferredStateOrnullType<S> =\n    S extends undefined ? undefined :\n    S extends null ? null : State<S>;\n\n/**\n * For plugin developers only.\n * An instance to manipulate the state in more controlled way.\n * \n * @typeparam S Type of a value of a state\n * \n * [Learn more...](https://vue3.dev/docs/writing-plugin)\n */\nexport interface PluginStateControl<S> {\n    /**\n     * Get state value, but do not leave the traces of reading it.\n     */\n    getUntracked(): S;\n    /**\n     * Set new state value, but do not trigger rerender.\n     * \n     * @param newValue new value to set to a state.\n     */\n    setUntracked(newValue: SetStateAction<S>): Path[];\n    /**\n     * Merge new state value, but do not trigger rerender.\n     * \n     * @param mergeValue new partial value to merge with the current state value and set.\n     */\n    mergeUntracked(mergeValue: SetPartialStateAction<S>): Path[];\n    /**\n     * Trigger rerender for hooked states, where values at the specified paths are used.\n     * \n     * @param paths paths of the state variables to search for being used by components and rerender\n     */\n    rerender(paths: Path[]): void;\n}\n\n/**\n * An interface to manage a state in Appstate-fast.\n * \n * @typeparam S Type of a value of a state\n */\nexport interface StateMethods<S> {\n    /**\n     * Returns the state instance managed by these methods.\n     * \n     * \n     */\n    [self]: State<S>;\n\n    /**\n     * 'Javascript' object 'path' to an element relative to the root object\n     * in the state. For example:\n     *\n     * ```tsx\n     * const state = useState([{ name: 'First Task' }])\n     * state[self].path IS []\n     * state[0][self].path IS [0]\n     * state.[0].name[self].path IS [0, 'name']\n     * ```\n     */\n    readonly path: Path;\n\n    /**\n     * Return the keys of nested states.\n     * For a given state of [State](#state) type,\n     * `state[self].keys` will be structurally equal to Object.keys(state),\n     * with two minor difference:\n     * 1. if `state[self].value` is an array, the returned result will be\n     * an array of numbers, not strings like with `Object.keys`.\n     * 2. if `state[self].value` is not an object, the returned result will be undefined.\n     */\n    readonly keys: InferredStateKeysType<S>;\n\n    /**\n     * Unwraps and returns the underlying state value referred by\n     * [path](#readonly-path) of this state instance.\n     *\n     * It returns the same result as [StateMethods.get](#get) method.\n     *\n     * This property is more useful than [get](#get) method for the cases,\n     * when a value may hold null or undefined values.\n     * Typescript compiler does not handle elimination of undefined with get(),\n     * like in the following examples, but value does:\n     *\n     * ```tsx\n     * const state = useState<number | undefined>(0)\n     * const myvalue: number = state[self].value\n     *      ? state[self].value + 1\n     *      : 0; // <-- compiles\n     * const myvalue: number = state[self].get()\n     *      ? state[self].get() + 1\n     *      : 0; // <-- does not compile\n     * ```\n     */\n    readonly value: S;\n\n    /**\n     * Unwraps and returns the underlying state value referred by\n     * [path](#readonly-path) of this state instance.\n     *\n     * It returns the same result as [StateMethods.value](#readonly-value) method.\n     */\n    get(): S;\n    \n    /**\n     * Sets new value for a state.\n     * If `this.path === []`,\n     * it is similar to the `setState` variable returned by `React.useState` hook.\n     * If `this.path !== []`, it sets only the segment of the state value, pointed out by the path.\n     * Unlike [merge](#merge) method, this method will not accept partial updates.\n     * Partial updates can be also done by walking the nested states and setting those.\n     *\n     * @param newValue new value to set to a state.\n     * It can be a value, a promise resolving to a value\n     * (only if [this.path](#readonly-path) is `[]`),\n     * or a function returning one of these.\n     * The function receives the current state value as an argument.\n     */\n    set(newValue: SetStateAction<S>): void;\n    \n    /**\n     * Similarly to [set](#set) method updates state value.\n     *\n     * - If current state value is an object, it does partial update for the object.\n     * - If state value is an array and the argument is an array too,\n     * it concatenates the current value with the value of the argument and sets it to the state.\n     * - If state value is an array and the `merge` argument is an object,\n     * it does partial update for the current array value.\n     * - If current state value is a string, it concatenates the current state\n     * value with the argument converted to string and sets the result to the state.\n     */\n    merge(newValue: SetPartialStateAction<S>): void;\n    \n    /**\n     * Maps this state to the result via the provided action.\n     * \n     * @param action mapper function\n     * \n     * @param onPromised this will be invoked instead of the action function,\n     * if a state value is unresolved promise.\n     * [Learn more about async states...](https://vue3.dev/docs/asynchronous-state)\n     * \n     * @param onError this will be invoked instead of the action function,\n     * if a state value is a promise resolved to an error.\n     * [Learn more about async states...](https://vue3.dev/docs/asynchronous-state)\n     * \n     * @param context if specified, the callbacks will be invoked in a batch.\n     * Updating state within a batch does not trigger immediate rerendering.\n     * Instead, all required rerendering is done once once the batch is finished.\n     * [Learn more about batching...](https://vue3.dev/docs/performance-batched-updates\n     */\n    map<R, RL, RE, C>(\n        action: (s: State<S>) => R,\n        onPromised: (s: State<S>) => RL,\n        onError: (e: StateErrorAtRoot, s: State<S>) => RE,\n        context?: Exclude<C, Function>\n    ): R | RL | RE;\n\n    /**\n     * Maps this state to the result via the provided action.\n     * \n     * @param action mapper function\n     * \n     * @param onPromised this will be invoked instead of the action function,\n     * if a state value is unresolved promise.\n     * [Learn more about async states...](https://vue3.dev/docs/asynchronous-state)\n     * \n     * @param context if specified, the callbacks will be invoked in a batch.\n     * Updating state within a batch does not trigger immediate rerendering.\n     * Instead, all required rerendering is done once once the batch is finished.\n     * [Learn more about batching...](https://vue3.dev/docs/performance-batched-updates\n     */\n    map<R, RL, C>(\n        action: (s: State<S>) => R,\n        onPromised: (s: State<S>) => RL,\n        context?: Exclude<C, Function>\n    ): R | RL;\n\n    /**\n     * Maps this state to the result via the provided action.\n     * \n     * @param action mapper function\n     * \n     * @param context if specified, the callbacks will be invoked in a batch.\n     * Updating state within a batch does not trigger immediate rerendering.\n     * Instead, all required rerendering is done once once the batch is finished.\n     * [Learn more about batching...](https://vue3.dev/docs/performance-batched-updates\n     */\n    map<R, C>(\n        action: (s: State<S>) => R,\n        context?: Exclude<C, Function>\n    ): R;\n    \n    /**\n     * Unfolds this state to an array representing promise state.\n     * The first element of the array result indicates if promise is loading\n     * (true - loading: promise is not resolved, false - not loading: promise is resolved).\n     * The second element with be either undefined or a value of an error,\n     * which the resolved promise rejected. The third element will be\n     * either undefined or a value of a state, if promise is resolved.\n     * [Learn more about async states...](https://vue3.dev/docs/asynchronous-state)\n     */\n    map(): [boolean, StateErrorAtRoot | undefined, S | undefined];\n\n    /**\n     * If state value is null or undefined, returns state value.\n     * Otherwise, it returns this state instance but\n     * with null and undefined removed from the type parameter.\n     * \n     * [Learn more...](https://vue3.dev/docs/nullable-state)\n     */\n    ornull: InferredStateOrnullType<S>;\n\n    /**\n     * Adds plugin to the state.\n     * \n     * [Learn more...](https://vue3.dev/docs/extensions-overview)\n     */\n    attach(plugin: () => Plugin): State<S>\n    \n    /**\n     * For plugin developers only.\n     * It is a method to get the instance of the previously attached plugin.\n     * If a plugin has not been attached to a state,\n     * it returns an Error as the first element.\n     * A plugin may trhow an error to indicate that plugin has not been attached.\n     * \n     * [Learn more...](https://vue3.dev/docs/writing-plugin)\n     */\n    attach(pluginId: symbol): [PluginCallbacks | Error, PluginStateControl<S>]\n}\n\n/**\n * Mixin for the [StateMethods](#interfacesstatemethodsmd) for a [State](#state),\n * which can be destroyed by a client.\n */\nexport interface StateMethodsDestroy {\n    /**\n     * Destroys an instance of a state, so\n     * it can clear the allocated native resources (if any)\n     * and can not be used anymore after it has been destroyed.\n     */\n    destroy(): void;\n}\n\n/**\n * User's state mixin with the special `self`-symbol property,\n * which allows to get [StateMethods](#interfacesstatemethodsmd) for a [State](#state).\n * \n * @typeparam S Type of a value of a state\n */\nexport interface StateMixin<S> {\n    /**\n     * Returns [StateMethods](#interfacesstatemethodsmd) for a [State](#state) \n     */\n    [self]: StateMethods<S>;\n}\n\n/**\n * User's state mixin with the special `self`-symbol property,\n * which allows to get [StateMethodsDestroy](#interfacesstatemethodsdestroymd) for a [State](#state).\n */\nexport interface StateMixinDestroy {\n    /**\n     * Returns [StateMethodsDestroy](#interfacesstatemethodsdestroymd) for a [State](#state) \n     */\n    [self]: StateMethodsDestroy;\n}\n\n/**\n * Type of a result of [createState](#createstate) and [useState](#usestate) functions\n * \n * @typeparam S Type of a value of a state\n * \n * [Learn more about global states...](https://vue3.dev/docs/global-state)\n * [Learn more about local states...](https://vue3.dev/docs/local-state)\n * [Learn more about nested states...](https://vue3.dev/docs/nested-state)\n */\nexport type State<S> = StateMixin<S> & (\n    S extends ReadonlyArray<(infer U)> ? ReadonlyArray<State<U>> :\n    // workaround for typescript unfolding State<boolean> to \n    // State<true> | State<false>, which results in broken type information\n    // for direct state methods.\n    // Note: this is covered by tests, so if you remove next 2 lines\n    // you will see where it breaks the compilation\n    S extends (true | false) ?\n        Omit<StateMethods<boolean>, keyof StateMixin<S>> :\n    S extends (undefined | null | number | boolean | string | bigint) ?\n        Omit<StateMethods<S>, keyof StateMixin<S>> :\n    S extends object ? { readonly [K in keyof Required<S>]: State<S[K]>; } :\n    {}\n);\n\n/**\n * For plugin developers only.\n * Type alias to highlight the places where we are dealing with root state value.\n *\n * @hidden\n * @ignore\n */\nexport type StateValueAtRoot = any; //tslint:disable-line: no-any\n/**\n * For plugin developers only.\n * Type alias to highlight the places where we are dealing with nested state value.\n *\n * @hidden\n * @ignore\n */\nexport type StateValueAtPath = any; //tslint:disable-line: no-any\n/**\n * For plugin developers only.\n * Type alias to highlight the places where we are dealing with state error.\n *\n * @hidden\n * @ignore\n */\nexport type StateErrorAtRoot = any; //tslint:disable-line: no-any\n/**\n * For plugin developers only.\n * Type alias to highlight the places where we are dealing with context value.\n *\n * @hidden\n * @ignore\n */\nexport type AnyContext = any; //tslint:disable-line: no-any\n\n/**\n * For plugin developers only.\n * PluginCallbacks.onSet argument type.\n */\nexport interface PluginCallbacksOnSetArgument {\n    readonly path: Path,\n    readonly state?: StateValueAtRoot,\n    readonly previous?: StateValueAtPath,\n    readonly value?: StateValueAtPath,\n    readonly merged?: StateValueAtPath,\n}\n\n/**\n * For plugin developers only.\n * PluginCallbacks.onDestroy argument type.\n */\nexport interface PluginCallbacksOnDestroyArgument {\n    readonly state?: StateValueAtRoot,\n}\n\n/**\n * For plugin developers only.\n * PluginCallbacks.onBatchStart/Finish argument type.\n */\nexport interface PluginCallbacksOnBatchArgument {\n    readonly path: Path,\n    readonly state?: StateValueAtRoot,\n    readonly context?: AnyContext,\n}\n\n/**\n * For plugin developers only.\n * Set of callbacks, a plugin may subscribe to.\n * \n * [Learn more...](https://vue3.dev/docs/writing-plugin)\n */\nexport interface PluginCallbacks {\n    readonly onSet?: (arg: PluginCallbacksOnSetArgument) => void,\n    readonly onDestroy?: (arg: PluginCallbacksOnDestroyArgument) => void,\n    readonly onBatchStart?: (arg: PluginCallbacksOnBatchArgument) => void,\n    readonly onBatchFinish?: (arg: PluginCallbacksOnBatchArgument) => void,\n};\n\n/**\n * For plugin developers only.\n * Appstate-fast plugin specification and factory method.\n * \n * [Learn more...](https://vue3.dev/docs/writing-plugin)\n */\nexport interface Plugin {\n    /**\n     * Unique identifier of a plugin.\n     */\n    readonly id: symbol;\n    /**\n     * Initializer for a plugin when it is attached for the first time.\n     */\n    readonly init?: (state: State<StateValueAtRoot>) => PluginCallbacks;\n}\n\n/**\n * Creates new state and returns it.\n *\n * You can create as many global states as you need.\n *\n * When you the state is not needed anymore,\n * it should be destroyed by calling\n * `destroy()` method of the returned instance.\n * This is necessary for some plugins,\n * which allocate native resources,\n * like subscription to databases, broadcast channels, etc.\n * In most cases, a global state is used during\n * whole life time of an application and would not require\n * destruction. However, if you have got, for example,\n * a catalog of dynamically created and destroyed global states,\n * the states should be destroyed as advised above.\n *\n * @param initial Initial value of the state.\n * It can be a value OR a promise,\n * which asynchronously resolves to a value,\n * OR a function returning a value or a promise.\n *\n * @typeparam S Type of a value of the state\n *\n * @returns [State](#state) instance,\n * which can be used directly to get and set state value\n * outside of React components.\n * When you need to use the state in a functional `React` component,\n * pass the created state to [useState](#usestate) function and\n * use the returned result in the component's logic.\n */\nexport function createState<S>(\n    initial: SetInitialStateAction<S>\n): State<S> & StateMixinDestroy {\n    const methods = createStore(initial).toMethods();\n    const devtools = createState[DevToolsID]\n    if (devtools) {\n        methods.attach(devtools)\n    }\n    return methods[self] as State<S> & StateMixinDestroy;\n}\n\n/**\n * Enables a functional React component to use a state,\n * either created by [createState](#createstate) (*global* state) or\n * derived from another call to [useState](#usestate) (*scoped* state).\n *\n * The `useState` forces a component to rerender everytime, when:\n * - a segment/part of the state data is updated *AND only if*\n * - this segement was **used** by the component during or after the latest rendering.\n *\n * For example, if the state value is `{ a: 1, b: 2 }` and\n * a component uses only `a` property of the state, it will rerender\n * only when the whole state object is updated or when `a` property is updated.\n * Setting the state value/property to the same value is also considered as an update.\n *\n * A component can use one or many states,\n * i.e. you may call `useState` multiple times for multiple states.\n *\n * The same state can be used by multiple different components.\n *\n * @param source a reference to the state to hook into\n *\n * The `useState` is a hook and should follow React's rules of hooks.\n *\n * @returns an instance of [State](#state),\n * which **must be** used within the component (during rendering\n * or in effects) or it's children.\n */\nexport function useState<S>(\n    source: State<S>\n): State<S>;\n/**\n * This function enables a functional React component to use a state,\n * created per component by [useState](#usestate) (*local* state).\n * In this case `useState` behaves similarly to `React.useState`,\n * but the returned instance of [State](#state)\n * has got more features.\n *\n * When a state is used by only one component, and maybe it's children,\n * it is recommended to use *local* state instead of *global*,\n * which is created by [createState](#createstate).\n *\n * *Local* (per component) state is created when a component is mounted\n * and automatically destroyed when a component is unmounted.\n *\n * The same as with the usage of a *global* state,\n * `useState` forces a component to rerender when:\n * - a segment/part of the state data is updated *AND only if*\n * - this segement was **used** by the component during or after the latest rendering.\n *\n * You can use as many local states within the same component as you need.\n *\n * @param source An initial value state.\n *\n * @returns an instance of [State](#state),\n * which **must be** used within the component (during rendering\n * or in effects) or it's children.\n */\nexport function useState<S>(\n    source: SetInitialStateAction<S>\n): State<S>;\nexport function useState<S>(\n    source: SetInitialStateAction<S> | State<S>\n): State<S> {\n    const parentMethods = typeof source === 'object' && source !== null ?\n        source[self] as StateMethodsImpl<S> | undefined :\n        undefined;\n    if (parentMethods) {\n        if (parentMethods.isMounted) {\n            // Scoped state mount\n            logger.log('%c create vue ref (scoped)', 'background: #222; color: #bada55')\n            return useSubscribedStateMethods<S>(parentMethods.state, parentMethods.path, parentMethods,\n                parentMethods.onGetUsed)[self];\n        } else {\n            // Global state mount or destroyed link\n            logger.log('create vue ref (global)')\n            return useSubscribedStateMethods<S>(parentMethods.state, parentMethods.path, parentMethods.state)[self];\n        }\n    } else {\n        // Local state mount\n        logger.log('create vue ref (local)')\n\n        const store = createStore(source)\n        onUnmounted(() => store.destroy());\n\n        const result = useSubscribedStateMethods<S>(store, RootPath, store);\n        const devtools = useState[DevToolsID]\n        if (devtools) {\n            result.attach(devtools)\n        }\n        return result[self];\n    }\n}\n\n// TODO StateFragment is applicable in Vue3 too, it should go to it's own Vue component\n/**\n * Allows to use a state without defining a functional react component.\n * It can be also used in class-based React components. It is also\n * particularly usefull for creating *scoped* states.\n *\n * [Learn more...](https://vue3.dev/docs/using-without-statehook)\n * \n * @typeparam S Type of a value of a state\n */\n// export function StateFragment<S>(\n//     props: {\n//         state: State<S>,\n//         children: (state: State<S>) => React.ReactElement,\n//     }\n// ): React.ReactElement;\n/**\n * Allows to use a state without defining a functional react component.\n * See more at [StateFragment](#statefragment)\n * \n * [Learn more...](https://vue3.dev/docs/using-without-statehook)\n * \n * @typeparam S Type of a value of a state\n */\n// export function StateFragment<S>(\n//     props: {\n//         state: SetInitialStateAction<S>,\n//         children: (state: State<S>) => React.ReactElement,\n//     }\n// ): React.ReactElement;\n// export function StateFragment<S>(\n//     props: {\n//         state: State<S> | SetInitialStateAction<S>,\n//         children: (state: State<S>) => React.ReactElement,\n//     }\n// ): React.ReactElement {\n//     const scoped = useState(props.state as State<S>);\n//     return props.children(scoped);\n// }\nexport function StateFragment<S>(props: {\n    state: State<S> | SetInitialStateAction<S>,\n    children:  (state: State<S>) => Component\n}): Component {\n    const scoped = useState(props.state as State<S>);\n    return props.children(scoped)\n}\n\n\n/**\n * A plugin which allows to opt-out from usage of Javascript proxies for\n * state usage tracking. It is useful for performance tuning.\n * \n * [Learn more...](https://vue3.dev/docs/performance-managed-rendering#downgraded-plugin)\n */\nexport function Downgraded(): Plugin { // tslint:disable-line: function-name\n    // TODO Vue specific makes Downgrade affecting behaviour\n    // In React Downgrade does not change the results of rendering\n    // In Vue Downgrade effectively converts customRef to shallowRef Vue hook,\n    // which might result in missed rendering for nested components\n    // This is likely a documentation issue only\n    return {\n        id: DowngradedID\n    }\n}\n\n/**\n * For plugin developers only.\n * Reserved plugin ID for developers tools extension.\n *\n * @hidden\n * @ignore\n */\nexport const DevToolsID = Symbol('DevTools');\n\n/**\n * Return type of [DevTools](#devtools).\n */\nexport interface DevToolsExtensions {\n    /**\n     * Assigns custom label to identify the state in the development tools\n     * @param name label for development tools\n     */\n    label(name: string): void;\n    /**\n     * Logs to the development tools\n     */\n    log(str: string, data?: any): void;    // tslint:disable-line: no-any\n}\n\n/**\n * Returns access to the development tools for a given state.\n * Development tools are delivered as optional plugins.\n * You can activate development tools from `@appstate-fast/devtools`package,\n * for example. If no development tools are activated,\n * it returns an instance of dummy tools, which do nothing, when called.\n * \n * [Learn more...](https://vue3.dev/docs/devtools)\n * \n * @param state A state to relate to the extension.\n * \n * @returns Interface to interact with the development tools for a given state.\n * \n * @typeparam S Type of a value of a state\n */\nexport function DevTools<S>(state: State<S>): DevToolsExtensions {\n    const plugin = state[self].attach(DevToolsID);\n    if (plugin[0] instanceof Error) {\n        return EmptyDevToolsExtensions;\n    }\n    return plugin[0] as DevToolsExtensions;\n}\n\n///\n/// INTERNAL SYMBOLS (LIBRARY IMPLEMENTATION)\n///\n\nconst EmptyDevToolsExtensions: DevToolsExtensions = {\n    label() { /* */ },\n    log() { /* */ }\n}\n\nenum ErrorId {\n    InitStateToValueFromState = 101,\n    SetStateToValueFromState = 102,\n    GetStateWhenPromised = 103,\n    SetStateWhenPromised = 104,\n    SetStateNestedToPromised = 105,\n    SetStateWhenDestroyed = 106,\n    GetStatePropertyWhenPrimitive = 107,\n    ToJson_Value = 108,\n    ToJson_State = 109,\n    GetUnknownPlugin = 120,\n\n    SetProperty_State = 201,\n    SetProperty_Value = 202,\n    SetPrototypeOf_State = 203,\n    SetPrototypeOf_Value = 204,\n    PreventExtensions_State = 205,\n    PreventExtensions_Value = 206,\n    DefineProperty_State = 207,\n    DefineProperty_Value = 208,\n    DeleteProperty_State = 209,\n    DeleteProperty_Value = 210,\n    Construct_State = 211,\n    Construct_Value = 212,\n    Apply_State = 213,\n    Apply_Value = 214,\n}\n\nclass StateInvalidUsageError extends Error {\n    constructor(path: Path, id: ErrorId, details?: string) {\n        super(`Error: APPSTATE-FAST-${id} [path: /${path.join('/')}${details ? `, details: ${details}` : ''}]. ` +\n            `See https://vue3.dev/docs/exceptions#appastate-fast-${id}`)\n    }\n}\n\ninterface Subscriber {\n    onSet(paths: Path[], actions: (() => void)[]): void;\n}\n\ninterface Subscribable {\n    subscribe(l: Subscriber): void;\n    unsubscribe(l: Subscriber): void;\n}\n\nconst DowngradedID = Symbol('Downgraded');\nconst SelfMethodsID = Symbol('ProxyMarker');\n\nconst RootPath: Path = [];\nconst DestroyedEdition = -1\n\ntype Writeable<T> = { -readonly [P in keyof T]: T[P] };\n\nclass Store implements Subscribable {\n    private _edition: number = 0;\n\n    private _subscribers: Set<Subscriber> = new Set();\n    private _setSubscribers: Set<Required<PluginCallbacks>['onSet']> = new Set();\n    private _destroySubscribers: Set<Required<PluginCallbacks>['onDestroy']> = new Set();\n    private _batchStartSubscribers: Set<Required<PluginCallbacks>['onBatchStart']> = new Set();\n    private _batchFinishSubscribers: Set<Required<PluginCallbacks>['onBatchFinish']> = new Set();\n\n    private _plugins: Map<symbol, PluginCallbacks> = new Map();\n\n    private _promised?: Promised;\n\n    private _batches = 0;\n    private _batchesPendingPaths?: Path[];\n    private _batchesPendingActions?: (() => void)[];\n\n    constructor(private _value: StateValueAtRoot) {\n        if (typeof _value === 'object' &&\n            Promise.resolve(_value) === _value) {\n            this._promised = this.createPromised(_value)\n            this._value = none\n        } else if (_value === none) {\n            this._promised = this.createPromised(undefined)\n        }\n    }\n\n    createPromised(newValue: StateValueAtPath | undefined) {\n        const promised = new Promised(\n            newValue ? Promise.resolve(newValue) : undefined,\n            (r: StateValueAtPath) => {\n                if (this.promised === promised && this.edition !== DestroyedEdition) {\n                    this._promised = undefined\n                    this.set(RootPath, r, undefined)\n                    this.update([RootPath])\n                }\n            },\n            () => {\n                if (this.promised === promised && this.edition !== DestroyedEdition) {\n                    this._edition += 1\n                    this.update([RootPath])\n                }\n            },\n            () => {\n                if (this._batchesPendingActions &&\n                    this._value !== none &&\n                    this.edition !== DestroyedEdition) {\n                    const actions = this._batchesPendingActions\n                    this._batchesPendingActions = undefined\n                    actions.forEach(a => a())\n                }\n            }\n        );\n        return promised;\n    }\n\n    get edition() {\n        return this._edition;\n    }\n\n    get promised() {\n        return this._promised;\n    }\n\n    get(path: Path) {\n        let result = this._value;\n        if (result === none) {\n            return result;\n        }\n        path.forEach(p => {\n            result = result[p];\n        });\n        return result;\n    }\n\n    set(path: Path, value: StateValueAtPath, mergeValue: Partial<StateValueAtPath> | undefined): Path {\n        if (this._edition < 0) {\n            throw new StateInvalidUsageError(path, ErrorId.SetStateWhenDestroyed)\n        }\n\n        if (path.length === 0) {\n            // Root value UPDATE case,\n\n            const onSetArg: Writeable<PluginCallbacksOnSetArgument> = {\n                path: path,\n                state: value,\n                value: value,\n                previous: this._value,\n                merged: mergeValue\n            }\n            if (value === none) {\n                this._promised = this.createPromised(undefined)\n                delete onSetArg.value\n                delete onSetArg.state\n            } else if (typeof value === 'object' && Promise.resolve(value) === value) {\n                this._promised = this.createPromised(value)\n                value = none\n                delete onSetArg.value\n                delete onSetArg.state\n            } else if (this._promised && !this._promised.resolver) {\n                throw new StateInvalidUsageError(path, ErrorId.SetStateWhenPromised)\n            }\n\n            let prevValue = this._value;\n            if (prevValue === none) {\n                delete onSetArg.previous\n            }\n            this._value = value;\n            this.afterSet(onSetArg)\n\n            if (prevValue === none && this._value !== none &&\n                this.promised && this.promised.resolver) {\n                this.promised.resolver()\n            }\n\n            return path;\n        }\n\n        if (typeof value === 'object' && Promise.resolve(value) === value) {\n            throw new StateInvalidUsageError(path, ErrorId.SetStateNestedToPromised)\n        }\n\n        let target = this._value;\n        for (let i = 0; i < path.length - 1; i += 1) {\n            target = target[path[i]];\n        }\n\n        const p = path[path.length - 1]\n        if (p in target) {\n            if (value !== none) {\n                // Property UPDATE case\n                let prevValue = target[p]\n                target[p] = value;\n                this.afterSet({\n                    path: path,\n                    state: this._value,\n                    value: value,\n                    previous: prevValue,\n                    merged: mergeValue\n                })\n\n                return path;\n            } else {\n                // Property DELETE case\n                let prevValue = target[p]\n                if (Array.isArray(target) && typeof p === 'number') {\n                    target.splice(p, 1)\n                } else {\n                    delete target[p]\n                }\n                this.afterSet({\n                    path: path,\n                    state: this._value,\n                    previous: prevValue,\n                    merged: mergeValue\n                })\n\n                // if an array of object is about to loose existing property\n                // we consider it is the whole object is changed\n                // which is identified by upper path\n                return path.slice(0, -1)\n            }\n        }\n\n        if (value !== none) {\n            // Property INSERT case\n            target[p] = value;\n            this.afterSet({\n                path: path,\n                state: this._value,\n                value: value,\n                merged: mergeValue\n            })\n\n            // if an array of object is about to be extended by new property\n            // we consider it is the whole object is changed\n            // which is identified by upper path\n            return path.slice(0, -1)\n        }\n\n        // Non-existing property DELETE case\n        // no-op\n        return path;\n    }\n\n    update(paths: Path[]) {\n        logger.log('update paths', paths)\n        \n        if (this._batches) {\n            this._batchesPendingPaths = this._batchesPendingPaths || []\n            this._batchesPendingPaths = this._batchesPendingPaths.concat(paths)\n            return;\n        }\n\n        const actions: (() => void)[] = [];\n        this._subscribers.forEach(s => s.onSet(paths, actions));\n        actions.forEach(a => a());\n    }\n\n    afterSet(params: PluginCallbacksOnSetArgument) {\n        if (this._edition !== DestroyedEdition) {\n            this._edition += 1;\n            this._setSubscribers.forEach(cb => cb(params))\n        }\n    }\n\n    startBatch(path: Path, options?: { context?:  AnyContext }): void {\n        this._batches += 1\n\n        const cbArgument: Writeable<PluginCallbacksOnBatchArgument> = {\n            path: path\n        }\n        if (options && 'context' in options) {\n            cbArgument.context = options.context\n        }\n        if (this._value !== none) {\n            cbArgument.state = this._value\n        }\n        this._batchStartSubscribers.forEach(cb => cb(cbArgument))\n    }\n\n    finishBatch(path: Path, options?: { context?:  AnyContext }): void {\n        const cbArgument: Writeable<PluginCallbacksOnBatchArgument> = {\n            path: path\n        }\n        if (options && 'context' in options) {\n            cbArgument.context = options.context\n        }\n        if (this._value !== none) {\n            cbArgument.state = this._value\n        }\n        this._batchFinishSubscribers.forEach(cb => cb(cbArgument))\n\n        this._batches -= 1\n        if (this._batches === 0) {\n            if (this._batchesPendingPaths) {\n                const paths = this._batchesPendingPaths\n                this._batchesPendingPaths = undefined\n                this.update(paths)\n            }\n        }\n    }\n\n    postponeBatch(action: () => void): void {\n        this._batchesPendingActions = this._batchesPendingActions || []\n        this._batchesPendingActions.push(action)\n    }\n\n    getPlugin(pluginId: symbol) {\n        return this._plugins.get(pluginId)\n    }\n\n    register(plugin: Plugin) {\n        const existingInstance = this._plugins.get(plugin.id)\n        if (existingInstance) {\n            return;\n        }\n\n        const pluginCallbacks = plugin.init ? plugin.init(this.toMethods()[self]) : {};\n        this._plugins.set(plugin.id, pluginCallbacks);\n        if (pluginCallbacks.onSet) {\n            this._setSubscribers.add((p) => pluginCallbacks.onSet!(p))\n        }\n        if (pluginCallbacks.onDestroy) {\n            this._destroySubscribers.add((p) => pluginCallbacks.onDestroy!(p))\n        }\n        if (pluginCallbacks.onBatchStart) {\n            this._batchStartSubscribers.add((p) => pluginCallbacks.onBatchStart!(p))\n        }\n        if (pluginCallbacks.onBatchFinish) {\n            this._batchFinishSubscribers.add((p) => pluginCallbacks.onBatchFinish!(p))\n        }\n    }\n\n    toMethods() {\n        return new StateMethodsImpl<StateValueAtRoot>(\n            this,\n            RootPath,\n            this.get(RootPath),\n            this.edition,\n            OnGetUsedNoAction,\n            OnSetUsedNoAction\n        )\n    }\n\n    subscribe(l: Subscriber) {\n        this._subscribers.add(l);\n    }\n\n    unsubscribe(l: Subscriber) {\n        this._subscribers.delete(l);\n    }\n\n    destroy() {\n        this._destroySubscribers.forEach(cb => cb(this._value !== none ? { state: this._value } : {}))\n        this._edition = DestroyedEdition\n    }\n\n    toJSON() {\n        throw new StateInvalidUsageError(RootPath, ErrorId.ToJson_Value);\n    }\n}\n\nclass Promised {\n    public fullfilled?: true;\n    public error?: StateErrorAtRoot;\n    public resolver?: () => void;\n\n    constructor(public promise: Promise<StateValueAtPath> | undefined,\n        onResolve: (r: StateValueAtPath) => void,\n        onReject: () => void,\n        onPostResolve: () => void) {\n        if (!promise) {\n            promise = new Promise<StateValueAtRoot>(resolve => {\n                this.resolver = resolve;\n            })\n        }\n        this.promise = promise\n            .then(r => {\n                this.fullfilled = true\n                if (!this.resolver) {\n                    onResolve(r)\n                }\n            })\n            .catch(err => {\n                this.fullfilled = true\n                this.error = err\n                onReject()\n            })\n            .then(() => onPostResolve())\n    }\n}\n\n// use symbol property to allow for easier reference finding\nconst ValueCacheProperty = Symbol('ValueCache');\n\nfunction OnGetUsedNoAction() { /** no action callback */ }\nfunction OnSetUsedNoAction() { /** no action callback */ }\n\n// use symbol to mark that a function has no effect anymore\nconst UnmountedMarker = Symbol('UnmountedMarker');\nOnGetUsedNoAction[UnmountedMarker] = true\nOnSetUsedNoAction[UnmountedMarker] = true\n\nclass StateMethodsImpl<S> implements StateMethods<S>, StateMethodsDestroy, Subscribable, Subscriber {\n    private subscribers: Set<Subscriber> | undefined;\n\n    private isDowngraded: boolean | undefined;\n    private childrenCache: Record<string | number, StateMethodsImpl<S[keyof S]>> | undefined;\n    private selfCache: State<S> | undefined;\n    \n    constructor(\n        public readonly state: Store,\n        public readonly path: Path,\n        private valueSource: S,\n        private valueEdition: number,\n        public readonly onGetUsed: () => void,\n        private readonly onSetUsed: () => void\n    ) { }\n\n    resetTracesBeforeRerender() {\n        delete this[ValueCacheProperty]\n        delete this.childrenCache\n        delete this.selfCache\n    }\n    \n    getUntracked(allowPromised?: boolean) {\n        this.onGetUsed();\n        \n        if (this.valueEdition !== this.state.edition) {\n            this.valueSource = this.state.get(this.path)\n            this.valueEdition = this.state.edition\n\n            if (this.isMounted) {\n                // this link is still mounted to a component\n                // populate cache again to ensure correct tracking of usage\n                // when React scans which states to rerender on update\n                if (ValueCacheProperty in this) {\n                    delete this[ValueCacheProperty]\n                    this.get(true) // renew cache to keep it marked used\n                }\n            } else {\n                // This link is not mounted to a component\n                // for example, it might be global link or\n                // a link which has been discarded after rerender\n                // but still captured by some callback or an effect.\n                // If we are here and if it was mounted before,\n                // it means it has not been garbage collected\n                // when a component unmounted.\n                // We take this opportunity to clean up caches\n                // to avoid memory leaks via stale children states cache.\n                delete this[ValueCacheProperty]\n                delete this.childrenCache\n                delete this.selfCache\n            }\n        }\n        if (this.valueSource === none && !allowPromised) {\n            if (this.state.promised && this.state.promised.error) {\n                throw this.state.promised.error;\n            }\n            throw new StateInvalidUsageError(this.path, ErrorId.GetStateWhenPromised)\n        }\n        return this.valueSource;\n    }\n\n    get(allowPromised?: boolean) {\n        const currentValue = this.getUntracked(allowPromised)\n        if (!(ValueCacheProperty in this)) {\n            if (this.isDowngraded) {\n                this[ValueCacheProperty] = currentValue;\n            } else if (Array.isArray(currentValue)) {\n                this[ValueCacheProperty] = this.valueArrayImpl(currentValue);\n            } else if (typeof currentValue === 'object' && currentValue !== null) {\n                this[ValueCacheProperty] = this.valueObjectImpl(currentValue as unknown as object);\n            } else {\n                this[ValueCacheProperty] = currentValue;\n            }\n        }\n        return this[ValueCacheProperty] as S;\n    }\n\n    get value(): S {\n        return this.get()\n    }\n\n    setUntracked(newValue: SetStateAction<S>, mergeValue?: Partial<StateValueAtPath>): [Path] {\n        if (typeof newValue === 'function') {\n            newValue = (newValue as ((prevValue: S) => S))(this.getUntracked());\n        }\n        if (typeof newValue === 'object' && newValue !== null && newValue[SelfMethodsID]) {\n            throw new StateInvalidUsageError(this.path, ErrorId.SetStateToValueFromState)\n        }\n        return [this.state.set(this.path, newValue, mergeValue)];\n    }\n\n    set(newValue: SetStateAction<S>) {\n        this.state.update(this.setUntracked(newValue));\n    }\n\n    mergeUntracked(sourceValue: SetPartialStateAction<S>): Path[] {\n        const currentValue = this.getUntracked()\n        if (typeof sourceValue === 'function') {\n            sourceValue = (sourceValue as Function)(currentValue);\n        }\n\n        let updatedPaths: [Path];\n        let deletedOrInsertedProps = false\n\n        if (Array.isArray(currentValue)) {\n            if (Array.isArray(sourceValue)) {\n                return this.setUntracked(currentValue.concat(sourceValue) as unknown as S, sourceValue)\n            } else {\n                const deletedIndexes: number[] = []\n                Object.keys(sourceValue).sort().forEach(i => {\n                    const index = Number(i);\n                    const newPropValue = sourceValue[index]\n                    if (newPropValue === none) {\n                        deletedOrInsertedProps = true\n                        deletedIndexes.push(index)\n                    } else {\n                        deletedOrInsertedProps = deletedOrInsertedProps || !(index in currentValue)\n                        currentValue[index] = newPropValue\n                    }\n                });\n                // indexes are ascending sorted as per above\n                // so, delete one by one from the end\n                // this way index positions do not change\n                deletedIndexes.reverse().forEach(p => {\n                    (currentValue as unknown as []).splice(p, 1)\n                })\n                updatedPaths = this.setUntracked(currentValue, sourceValue)\n            }\n        } else if (typeof currentValue === 'object' && currentValue !== null) {\n            Object.keys(sourceValue).forEach(key => {\n                const newPropValue = sourceValue[key]\n                if (newPropValue === none) {\n                    deletedOrInsertedProps = true\n                    delete currentValue[key]\n                } else {\n                    deletedOrInsertedProps = deletedOrInsertedProps || !(key in currentValue)\n                    currentValue[key] = newPropValue\n                }\n            })\n            updatedPaths = this.setUntracked(currentValue, sourceValue)\n        } else if (typeof currentValue === 'string') {\n            return this.setUntracked((currentValue + String(sourceValue)) as unknown as S, sourceValue)\n        } else {\n            return this.setUntracked(sourceValue as S)\n        }\n\n        if (updatedPaths.length !== 1 || updatedPaths[0] !== this.path || deletedOrInsertedProps) {\n            return updatedPaths\n        }\n        const updatedPath = updatedPaths[0]\n        return Object.keys(sourceValue).map(p => updatedPath.slice().concat(p))\n    }\n\n    merge(sourceValue: SetPartialStateAction<S>) {\n        this.state.update(this.mergeUntracked(sourceValue));\n    }\n\n    rerender(paths: Path[]) {\n        this.state.update(paths)\n    }\n\n    destroy(): void {\n        this.state.destroy()\n    }\n\n    subscribe(l: Subscriber) {\n        if (this.subscribers === undefined) {\n            this.subscribers = new Set();\n        }\n        this.subscribers.add(l);\n    }\n\n    unsubscribe(l: Subscriber) {\n        this.subscribers!.delete(l);\n    }\n    \n    get isMounted(): boolean {\n        return !this.onSetUsed[UnmountedMarker]\n    }\n\n    onUnmount() {\n        this.onSetUsed[UnmountedMarker] = true\n    }\n\n    onSet(paths: Path[], actions: (() => void)[]): boolean {\n        const update = () => {\n            if (this.isDowngraded && (ValueCacheProperty in this)) {\n                actions.push(this.onSetUsed);\n                return true;\n            }\n            for (let path of paths) {\n                const firstChildKey = path[this.path.length];\n                if (firstChildKey === undefined) {\n                    if (ValueCacheProperty in this) {\n                        actions.push(this.onSetUsed);\n                        return true;\n                    }\n                } else {\n                    const firstChildValue = this.childrenCache && this.childrenCache[firstChildKey];\n                    if (firstChildValue && firstChildValue.onSet(paths, actions)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        const updated = update();\n        if (!updated && this.subscribers !== undefined) {\n            this.subscribers.forEach(s => {\n                s.onSet(paths, actions)\n            })\n        }\n        return updated;\n    }\n\n    get keys(): InferredStateKeysType<S> {\n        const value = this.get()\n        if (Array.isArray(value)) {\n            return Object.keys(value).map(i => Number(i)).filter(i => Number.isInteger(i)) as\n                unknown as InferredStateKeysType<S>;\n        }\n        if (typeof value === 'object' && value !== null) {\n            return Object.keys(value) as unknown as InferredStateKeysType<S>;\n        }\n        return undefined as InferredStateKeysType<S>;\n    }\n\n    child(key: number | string) {\n        // if this state is not mounted to a hook,\n        // we do not cache children to avoid unnecessary memory leaks\n        if (this.isMounted) {\n            this.childrenCache = this.childrenCache || {};\n            const cachehit = this.childrenCache[key];\n            if (cachehit) {\n                return cachehit;\n            }\n        }\n        const r = new StateMethodsImpl(\n            this.state,\n            this.path.slice().concat(key),\n            this.valueSource[key],\n            this.valueEdition,\n            this.onGetUsed,\n            this.onSetUsed,\n        )\n        if (this.isDowngraded) {\n            r.isDowngraded = true;\n        }\n        if (this.childrenCache) {\n            this.childrenCache[key] = r;\n        }\n        return r;\n    }\n    \n    private valueArrayImpl(currentValue: StateValueAtPath[]): S {\n        return proxyWrap(this.path, currentValue,\n            () => currentValue,\n            (target: object, key: PropertyKey) => {\n                if (key === 'length') {\n                    return (target as []).length;\n                }\n                if (key in Array.prototype) {\n                    return Array.prototype[key];\n                }\n                if (key === SelfMethodsID) {\n                    return this;\n                }\n                if (typeof key === 'symbol') {\n                    // allow clients to associate hidden cache with state values\n                    return target[key];\n                }\n                const index = Number(key);\n                if (!Number.isInteger(index)) {\n                    return undefined;\n                }\n                return this.child(index).get();\n            },\n            (target: object, key: PropertyKey, value: StateValueAtPath) => {\n                if (typeof key === 'symbol') {\n                    // allow clients to associate hidden cache with state values\n                    target[key] = value;\n                    return true;\n                }\n                throw new StateInvalidUsageError(this.path, ErrorId.SetProperty_Value)\n            },\n            true\n        ) as unknown as S;\n    }\n\n    private valueObjectImpl(currentValue: object): S {\n        return proxyWrap(this.path, currentValue,\n            () => currentValue,\n            (target: object, key: PropertyKey) => {\n                if (key === SelfMethodsID) {\n                    return this;\n                }\n                if (typeof key === 'symbol') {\n                    // allow clients to associate hidden cache with state values\n                    return target[key];\n                }\n                return this.child(key).get();\n            },\n            (target: object, key: PropertyKey, value: StateValueAtPath) => {\n                if (typeof key === 'symbol') {\n                    // allow clients to associate hidden cache with state values\n                    target[key] = value;\n                    return true;\n                }\n                throw new StateInvalidUsageError(this.path, ErrorId.SetProperty_Value)\n            },\n            true\n        ) as unknown as S;\n    }\n\n    get [self](): State<S> {\n        if (this.selfCache) {\n            return this.selfCache\n        }\n        this.selfCache = proxyWrap(this.path, this.valueSource,\n            () => {\n                this.get() // get latest & mark used\n                return this.valueSource\n            },\n            (_, key) => {\n                if (typeof key === 'symbol') {\n                    if (key === self) {\n                        return this\n                    } else {\n                        return undefined\n                    }\n                } else {\n                    if (key === 'toJSON') {\n                        // TODO in React it is explicitly forbidden to serialize state to JSON;\n                        // A client is required to serialize state values instead\n                        // In Vue, enabling custom toJSON returning a value (not a string as required by spec)\n                        // allows to replace {{ state.value }} by {{ state }} in Vue html templates\n                        // This enables nice syntax sugar, but are there negative side effects\n                        // from violating the expeciations of return type from toJSON?\n                        // Note: Returning undefined here, makes Vue thinking that states of primitive values\n                        // are objects without properties, so it renders '{}' instead of an action primitive state.value\n                        return () => this.value\n                        // throw new StateInvalidUsageError(this.path, ErrorId.ToJson_State);\n                    }\n\n                    // TODO this allows to unwrap state from props proxy,\n                    // but what other negative side effects it might have?\n                    if (key === \"__v_raw\") {\n                        return this\n                    }\n                    \n                    const currentValue = this.getUntracked(true);\n                    if (// if currentValue is primitive type\n                        (typeof currentValue !== 'object' || currentValue === null) &&\n                        // if promised, it will be none\n                        currentValue !== none) {\n                        switch (key) {\n                            case 'path':\n                                return this.path\n                            case 'keys':\n                                return this.keys\n                            case 'value':\n                                return this.value\n                            case 'get':\n                                return () => this.get()\n                            case 'set':\n                                return (p: SetStateAction<S>) => this.set(p)\n                            case 'merge':\n                                return (p: SetPartialStateAction<S>) => this.merge(p)\n                            case 'map':\n                                // tslint:disable-next-line: no-any\n                                return (...args: any[]) => this.map(args[0], args[1], args[2], args[3])\n                            case 'attach':\n                                return (p: symbol) => this.attach(p)\n                            // TODO for consistency, it is possible to enable\n                            // Symbol.toPrimitive with similar behavior.\n                            // But it is only minor performance enhancement for Vue\n                            // when state is used in expressions like {{ state + 1 }}\n                            // Also, it is unclear if such constructions should be allowed.\n                            // Currently it is allowed for consistency with enabled toJSON for a state\n                            case 'valueOf':\n                                return () => this.value\n                            // TODO same questions as for valueOf above\n                            // Currently it is allowed for consistency with enabled toJSON for a state\n                            case 'toString':\n                                // toString for a number can come with an argument\n                                return (arg?: any) => {\n                                    if (arg !== undefined && this.value) {\n                                        return (this.value as any).toString(arg)\n                                    }\n                                    return String(this.value)\n                                }\n                            default:\n                                // Overall it is an error that users asks props of a primitive state,\n                                // but we need to enable Vue rendering:\n                                // when Vue encounters and object in template,\n                                // it asks for 2 known properties:\n                                if (key === '__v_isRef' || key === '__v_isReadonly') {\n                                    return undefined;\n                                }\n                                this.get() // mark used\n                                throw new StateInvalidUsageError(this.path, ErrorId.GetStatePropertyWhenPrimitive)\n                        }\n                    }\n\n                    // TODO if this is promised state\n                    // it will throw, better to add new error code\n                    // and explain that state.map(...) should be replaced by state[self].map(...)\n                    // which is the most common oversight with promised states.\n                    this.get() // mark used\n                    if (Array.isArray(currentValue)) {\n                        if (key === 'length') {\n                            // logger.log('called get for array length', key)\n                            return currentValue.length;\n                        }\n                        if (key in Array.prototype) {\n                            // logger.log('called get for array prototype', key)\n                            return Array.prototype[key];\n                        }\n                        const index = Number(key);\n                        if (!Number.isInteger(index)) {\n                            // logger.log('called get for array named prop', key)\n                            return undefined;\n                        }\n                        // logger.log('called get for array index', key)\n                        return this.child(index)[self]\n                    }\n                    // logger.log('called get return child', key)\n                    return this.child(key.toString())[self]\n                }\n            },\n            (_, key, value) => {\n                throw new StateInvalidUsageError(this.path, ErrorId.SetProperty_State)\n            },\n            false) as unknown as State<S>;\n        return this.selfCache\n    }\n    \n    map<R, RL, RE, C>(\n        action: (s: State<S>) => R,\n        onPromised: (s: State<S>) => RL,\n        onError: (e: StateErrorAtRoot, s: State<S>) => RE,\n        context?: Exclude<C, Function>\n    ): R | RL | RE;\n    map<R, RL, C>(\n        action: (s: State<S>) => R,\n        onPromised: (s: State<S>) => RL,\n        context?: Exclude<C, Function>\n    ): R | RL;\n    map<R, C>(\n        action: (s: State<S>) => R,\n        context?: Exclude<C, Function>\n    ): R;\n    map(): [boolean, StateErrorAtRoot | undefined, S | undefined];\n    map<R, RL, RE, C>(\n        action?: (s: State<S>) => R,\n        onPromised?: ((s: State<S>) => RL) | Exclude<C, Function>,\n        onError?: ((e: StateErrorAtRoot, s: State<S>) => RE) | Exclude<C, Function>,\n        context?: Exclude<C, Function>\n    ): InferredStateOrnullType<S> | R | RL | RE | [boolean, StateErrorAtRoot | undefined, S | undefined] {\n        const promised = () => {\n            const currentValue = this.get(true) // marks used\n            if (currentValue === none && this.state.promised && !this.state.promised.fullfilled) {\n                return true;\n            }\n            return false;\n        }\n        \n        const error = () => {\n            const currentValue = this.get(true) // marks used\n            if (currentValue === none) {\n                if (this.state.promised && this.state.promised.fullfilled) {\n                    return this.state.promised.error;\n                }\n                this.get() // will throw 'read while promised' exception\n            }\n            return undefined;\n        }\n        \n        if (!action) {\n            if (promised()) {\n                return [true, undefined, undefined]\n            }\n            if (error()) {\n                return [false, error(), undefined]\n            }\n            return [false, undefined, this.value]\n        }\n        \n        const contextArg = typeof onPromised === 'function'\n            ? (typeof onError === 'function' ? context : onError)\n            : onPromised;\n\n        const runBatch = ((actionArg: () => (R | RL | RE)) => {\n            if (contextArg !== undefined) {\n                const opts = { context: contextArg }\n                try {\n                    this.state.startBatch(this.path, opts)\n                    return actionArg()\n                } finally {\n                    this.state.finishBatch(this.path, opts)\n                }\n            } else {\n                return actionArg()\n            }\n        })\n            \n        if (typeof onPromised === 'function' && promised()) {\n            return runBatch(() => {\n                const r = (onPromised as ((s: State<S>) => RL))(this[self])\n                if (r as unknown as symbol === postpone) {\n                    // tslint:disable-next-line: no-any\n                    this.state.postponeBatch(\n                        () => this.map(action, onPromised as any, onError as any, context as any))\n                }\n                return r;\n            })\n        }\n        \n        if (typeof onError === 'function' && error()) {\n            return runBatch(() => (onError as ((e: StateErrorAtRoot, s: State<S>) => RE))(error(), this[self]))\n        }\n        \n        return runBatch(() => action(this[self]))\n    }\n\n    get ornull(): InferredStateOrnullType<S> {\n        const value = this.get()\n        if (value === null || value === undefined) {\n            return value as unknown as InferredStateOrnullType<S>;\n        }\n        return this[self] as InferredStateOrnullType<S>;\n    }\n\n    attach(plugin: () => Plugin): State<S>\n    attach(pluginId: symbol): [PluginCallbacks | Error, PluginStateControl<S>]\n    attach(p: (() => Plugin) | symbol):\n        State<S> | [PluginCallbacks | Error, PluginStateControl<S>] {\n        if (typeof p === 'function') {\n            const pluginMeta = p();\n            if (pluginMeta.id === DowngradedID) {\n                this.isDowngraded = true;\n                return this[self];\n            }\n            this.state.register(pluginMeta);\n            return this[self];\n        } else {\n            return [\n                this.state.getPlugin(p) ||\n                    (new StateInvalidUsageError(this.path, ErrorId.GetUnknownPlugin, p.toString())), \n                this\n            ];\n        }\n    }\n}\n\nfunction proxyWrap(\n    path: Path,\n    // tslint:disable-next-line: no-any\n    targetBootstrap: any,\n    // tslint:disable-next-line: no-any\n    targetGetter: () => any,\n    // tslint:disable-next-line: no-any\n    propertyGetter: (unused: any, key: PropertyKey) => any,\n    // tslint:disable-next-line: no-any\n    propertySetter: (unused: any, p: PropertyKey, value: any, receiver: any) => boolean,\n    isValueProxy: boolean\n) {\n    const onInvalidUsage = (op: ErrorId) => {\n        throw new StateInvalidUsageError(path, op)\n    }\n    if (typeof targetBootstrap !== 'object' || targetBootstrap === null) {\n        targetBootstrap = {}\n    }\n    return new Proxy(targetBootstrap, {\n        getPrototypeOf: (target) => {\n            logger.log('called getPrototypeOf')\n            // should satisfy the invariants:\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getPrototypeOf#Invariants\n            const targetReal = targetGetter()\n            if (targetReal === undefined || targetReal === null) {\n                return null;\n            }\n            return Object.getPrototypeOf(targetReal);\n        },\n        setPrototypeOf: (target, v) => {\n            logger.log('called setPrototypeOf')\n            return onInvalidUsage(isValueProxy ?\n                ErrorId.SetPrototypeOf_State :\n                ErrorId.SetPrototypeOf_Value)\n        },\n        isExtensible: (target) => {\n            logger.log('called isExtensible')\n            // should satisfy the invariants:\n            // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/isExtensible#Invariants\n            return true; // required to satisfy the invariants of the getPrototypeOf\n            // return Object.isExtensible(target);\n        },\n        preventExtensions: (target) => {\n            logger.log('called preventExtensions')\n            return onInvalidUsage(isValueProxy ?\n                ErrorId.PreventExtensions_State :\n                ErrorId.PreventExtensions_Value)\n        },\n        getOwnPropertyDescriptor: (target, p) => {\n            logger.log('called getOwnPropertyDescriptor', p)\n            const targetReal = targetGetter()\n            if (targetReal === undefined || targetReal === null) {\n                return undefined;\n            }\n            const origin = Object.getOwnPropertyDescriptor(targetReal, p);\n            if (origin && Array.isArray(targetReal) && p in Array.prototype) {\n                return origin;\n            }\n            return origin && {\n                configurable: true, // JSON.stringify() does not work for an object without it\n                enumerable: origin.enumerable,\n                get: () => propertyGetter(targetReal, p),\n                set: undefined\n            };\n        },\n        has: (target, p) => {\n            logger.log('called has', p)\n            if (typeof p === 'symbol') {\n                return false;\n            }\n            const targetReal = targetGetter()\n            if (typeof targetReal === 'object' && targetReal !== null) {\n                return p in targetReal;\n            }\n            return false;\n        },\n        get: (target, p ) => {\n            logger.log('called get', p)\n            return propertyGetter(target, p)\n        },\n        set: (target, p, v, r) => {\n            logger.log('called set', p, v)\n            return propertySetter(target, p, v, r)\n        },\n        deleteProperty: (target, p) => {\n            logger.log('called deleteProperty')\n            return onInvalidUsage(isValueProxy ?\n                ErrorId.DeleteProperty_State :\n                ErrorId.DeleteProperty_Value)\n        },\n        defineProperty: (target, p, attributes) => {\n            logger.log('called defineProperty', p, attributes)\n            // TODO temporary allow to mark objects as Vue raw\n            if (p === \"__v_skip\") {\n                return Object.defineProperty(target, p, attributes)\n            }\n            if (p === \"__v_reactive\") {\n                return Object.defineProperty(target, p, attributes)\n            }\n            return onInvalidUsage(isValueProxy ?\n                ErrorId.DefineProperty_State :\n                ErrorId.DefineProperty_Value)\n        },\n        enumerate: (target) => {\n            logger.log('called enumerate')\n            const targetReal = targetGetter()\n            if (Array.isArray(targetReal)) {\n                return Object.keys(targetReal).concat('length');\n            }\n            if (targetReal === undefined || targetReal === null) {\n                return [];\n            }\n            return Object.keys(targetReal);\n        },\n        ownKeys: (target) => {\n            logger.log('called ownKeys')\n            const targetReal = targetGetter()\n            if (Array.isArray(targetReal)) {\n                return Object.keys(targetReal).concat('length');\n            }\n            if (targetReal === undefined || targetReal === null) {\n                return [];\n            }\n            return Object.keys(targetReal);\n        },\n        apply: (target, thisArg, argArray?) => {\n            logger.log('called apply')\n            return onInvalidUsage(isValueProxy ?\n                ErrorId.Apply_State:\n                ErrorId.Apply_Value)\n        },\n        construct: (target, argArray, newTarget?) => {\n            logger.log('called construct')\n            return onInvalidUsage(isValueProxy ?\n                ErrorId.Construct_State :\n                ErrorId.Construct_Value)\n        }\n    });\n}\n\nfunction createStore<S>(initial: SetInitialStateAction<S>): Store {\n    let initialValue: S | Promise<S> = initial as (S | Promise<S>);\n    if (typeof initial === 'function') {\n        initialValue = (initial as (() => S | Promise<S>))();\n    }\n    if (typeof initialValue === 'object' && initialValue !== null && initialValue[SelfMethodsID]) {\n        throw new StateInvalidUsageError(RootPath, ErrorId.InitStateToValueFromState)\n    }\n    return new Store(initialValue);\n}\n\nfunction useSubscribedStateMethods<S>(\n    state: Store,\n    path: Path,\n    subscribeTarget: Subscribable,\n    parentOnGetUsed?: () => void\n) {\n    let capturedTrack: () => void;\n    let capturedTrigger: () => void;\n    customRef((track, trigger) => {\n        capturedTrack = track\n        capturedTrigger = trigger\n        return { get() {}, set() {} }\n    })\n    let renderTimes = 0\n    const renderWatcher = computed(() => {\n        renderTimes += 1\n        capturedTrack()\n        logger.warn('called renderWatcher', renderTimes)\n        // TODO need to disable this and rethink cache clean up strategy\n        // because this leaves broken chain to nested states which are not\n        // \"rebuilt\" like in react during rerender from parent to child\n        // link.resetTracesBeforeRerender()\n        return renderTimes\n    })\n\n    const link = new StateMethodsImpl<S>(\n        state,\n        path,\n        state.get(path),\n        state.edition,\n        () => {\n            // TODO not sure how efficient it will be for Vue\n            // but it is the only way to force rerender for nested components\n            // when parent is rerendered\n            // (effectively this line ensures that the customRef from parent\n            // is also tracked when child's scoped state is used,\n            // which is correct - child's state is a substate of a parent's state)\n            parentOnGetUsed && parentOnGetUsed()\n            \n            // TODO if link.resetTracesBeforeRerender is not used above\n            // it is possible to use here\n            // capturedTrack(),\n            // instead of renderWatcher.value below\n            // but keep the current scheme until things get 100% clear\n            // regarding cache clean up strategy\n            \n            // TODO call to value has got a side effect, although it is a property\n            // need to make sure this is not deleted by an optimizer,\n            // which might decide the return value is not used.\n            // but how?\n            renderWatcher.value\n        },\n        capturedTrigger!,\n    );\n    \n    // in vue this is executed only once during setup\n    subscribeTarget.subscribe(link)\n    // and this will be executed when unmounted, which also happens only once\n    onUnmounted(() => subscribeTarget.unsubscribe(link))\n\n    return link;\n}\n"],"names":["onUnmounted","customRef","computed"],"mappings":"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"}